- Notas modulo 6 sobre SELECT a fondo -

Funcion fecha actual: SELECT now();

Obtener parte de la fecha: SELECT date_part('MONTH', now());

Ejercicios:

select nombre, valor from colores where nombre='azul';

select nombre, valor from colores where UPPER(nombre)=UPPER('azul');

select consecutivo, producto, cantidad from ventas where producto = 4;

select from ventas where cantidad > 15; select from ventas where cantidad < 15;

select from ventas where producto <> 4; select from ventas where producto != 4;

select from ventas where producto <= 3; select from ventas where producto >= 3;

select * from nombres where nombre like 'Andres%'; select * from nombres where nombre like '%gmail.com';

select * from nombres where nombre like '%el%';

select * from nombres where nombre like 'Carlos Acero_'; -- comodin de un solo caracter

select * from nombres where nombre ILKE 'CARLOS ___RO_';

select * from nombres where nombre ilike 'CARLOS%'; -- con ILIKE se evita el case sensitive en PgSQL

select * from ventas where cantidad between 10 and 15;

select * from productos where vencimiento between '2019-03-01' and '2019-03-15';

select * from distintos where color_a IN('AZUL', 'rolo', verde', 'amarillo');

select * from distintos where color_a IN(select nombre from colores);

select * from distintos where color_a IS NULL; -- nulo no siginifica vacio ' '

select * from distintos where color_a NOT IN(select nombre from colores);

select * from colores where nombre EXISTS(select * from nombres); -- mostrar info de la consulta si de la subconsulta se obtuvo informaci贸n, es decir, existe algo que retorne valor

select * from colores where nombre EXISTS(select 1 from nombres where 3 = 8);

select *, CASE WHEN valor > 500 THEN 'Caro' ELSE 'Economico' END from productos;

select *, CASE WHEN valor < 500 THEN 'Economico' WHEN valor = 1200 THEN 'Normal' WHEN valor > 1200 THEN 'Caro' END from productos;

select v.consecutivo, v.producto, p.nombre, v.cantidad, p.valor, v.cantidad * p.valor AS valor_total FROM ventas v INNER JOIN productos p ON v.producto = p.codigo

EL INTO, tabla temporal calculada y uso:

select v.consecutivo, v.producto, p.nombre, v.cantidad, p.valor, v.cantidad * p.valor AS valor_total INTO tmp_consulta FROM ventas v INNER JOIN productos p ON v.producto = p.codigo

select * from tmp_consulta;

select DISTINCT color_a, color_b from distintos; -- muestra los valores unicos descartando despues de cada uno los iguales, para no repetir de la proyecccion en la consulta

select DISTINCT(color_a) color_a, color_b from distintos ORDER BY color_a, color_b;

- Clausulas de agregaci贸n: MIN, MAX, SUM, COUNT, AVG

select MIN(cantidad) as minimo from ventas; select MAX(cantidad) as maximo from ventas;

select AVG(cantidad) as promedio from ventas; select SUM(cantidad) as suma_total from ventas;

select COUNT(cantidad) as cantitad_ventas from ventas;

select MIN(cantidad) minimo, MAX(cantidad) maximo, COUNT(cantidad) cuenta, SUM(cantidad) suma, AVG(cantidad) promedio from ventas;

select PRODUCTO, SUM(CANTIDAD) AS SUMA FROM VENTAS GROUP BY PRODUCTO; -- necesario agrupar cuando se usa funcion de agregaci贸n

select v.producto, p.nombre, sum(v.cantidad) AS SUMA from ventas as v INNER JOIN productos p ON v.producto = p.codigo group by v.producto, p.nombre

- Formas de ordenamiento:

select producto, cantidad from ventas order by producto, cantidad; -- ASC por default

select producto, cantidad from ventas order by producto, cantidad DESC;

select producto, cantidad from ventas order by 1, 2; -- orden por numero de columna sin saber su nombre

select producto, cantidad from ventas order by producto DESC, cantidad ASC; 

- Filtro por grupo HAVING:

select producto, SUM(cantidad) AS SUMA from ventas group by producto having SUM(cantidad) > 18;

select nombre, count(*) cantidad from nombres group by nombre having count(*) > 1; -- util ver registros repetidos

- Paginaci贸n registros:

select * from ventas LIMIT 5;  select * from ventas order by producto DESC LIMIT 5;


select * from ventas LIMIT 5;  select * from ventas order by producto DESC LIMIT 5 OFFSET 5;

select * from ventas order by consecutivo DESC LIMIT 5 OFFSET 0;

select * from ventas order by consecutivo DESC LIMIT 5 OFFSET 5;